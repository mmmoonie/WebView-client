package xyz.supermoonie;

import org.junit.Test;

import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Base64;
import java.util.regex.Pattern;

import static org.junit.Assert.assertTrue;

/**
 * Unit test for simple App.
 */
public class AppTest 
{
    /**
     * Rigorous Test :-)
     */
    @Test
    public void shouldAnswerWithTrue() throws UnsupportedEncodingException, MalformedURLException {
        String base64Text = "CTwhRE9DVFlQRSBIVE1MIFBVQkxJQyAiLS8vVzNDLy9EVEQgSFRNTCA0LjAxIFRyYW5zaXRpb25hbC8vRU4iPg0KPGh0bWw+DQo8aGVhZD4NCjxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iSUU9RW11bGF0ZUlFNyIgLz4NCjxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PWdiMjMxMiI+DQo8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LUxhbmd1YWdlIiBjb250ZW50PSJ6aC1DTiI+DQo8bWV0YSBodHRwLWVxdWl2PSJQcmFnbWEiIGNvbnRlbnQ9Ik5vLWNhY2hlIj4NCjxtZXRhIGh0dHAtZXF1aXY9IkNhY2hlLUNvbnRyb2wiIGNvbnRlbnQ9Im5vLWNhY2hlLCBtdXN0LXJldmFsaWRhdGUiPg0KPG1ldGEgaHR0cC1lcXVpdj0iRXhwaXJlcyIgY29udGVudD0iMCI+DQo8bWV0YSBodHRwLWVxdWl2PSJXaWRvdy10YXJnZXQiIGNvbnRlbnQ9Il90b3AiPg0KPGxpbmsgcmVsPSJTaG9ydGN1dCBJY29uIiBocmVmPSJmYXZpY29uLmljbyI+DQo8bGluayByZWw9IkJvb2ttYXJrIiBocmVmPSJmYXZpY29uLmljbyI+DQo8bGluayBocmVmPSJjc3Mvc3R5bGUyMDEyLmNzcyIgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyI+DQo8c2NyaXB0IHNyYz0ianMvQUNfUnVuQWN0aXZlQ29udGVudC5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4NCjxTQ1JJUFQgdHlwZT10ZXh0L2phdmFzY3JpcHQgc3JjPSJqcy9qcXVlcnktMS40LjIubWluMi5qcyI+PC9TQ1JJUFQ+DQo8L2hlYWQ+DQo8bm9zY3JpcHQ+DQo8aWZyYW1lIHNyYz0qLmh0bWw+PC9pZnJhbWU+DQo8L25vc2NyaXB0Pg0KPHNjcmlwdCBsYW5ndWFnZT1qYXZhc2NyaXB0Pg0KPCEtLQ0KaWYgKHRvcC5sb2NhdGlvbiAhPSBzZWxmLmxvY2F0aW9uKQ0KICB0b3AubG9jYXRpb249c2VsZi5sb2NhdGlvbjsNCi8vLS0+PC9zY3JpcHQ+DQo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJqcy9tZDUuanMiPjwvc2NyaXB0Pg0KPHNjcmlwdCBsYW5ndWFnZT0iSmF2YVNjcmlwdCIgc3JjPSJqcy9jaGVjay5qcyI+PC9zY3JpcHQ+DQo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJqcy9Vc2VyTG9naW4uanMiPjwvc2NyaXB0Pg0KPGJvZHkgc3R5bGU9ImJhY2tncm91bmQ6dXJsKGltYWdlcy9iZzIwMTMxMi5wbmcpIHJlcGVhdC14ICNmZmY7Ij4NCjxjZW50ZXI+PGlmcmFtZSBuYW1lPSJJMSIgIHNyYz0iaGVhZGVyMC5odG1sIiBzY3JvbGxpbmc9Im5vIiBib3JkZXI9IjAiIA0KaGVpZ2h0PSIxNTgiIHdpZHRoPTEwMCUgZnJhbWVib3JkZXI9IjAiIG1hcmdpbndpZHRoPSIwIiBtYXJnaW5oZWlnaHQ9IjAiIHZhbGlnbj0idG9wIiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQiPjwvaWZyYW1lPjwvY2VudGVyPg0KPGZvcm0gbmFtZT0ibG9naW5mb3JtIiBhY3Rpb249ImphdmFzY3JpcHQ6bG9naW5fc3VibWl0KGxvZ2luZm9ybSk7IiBtZXRob2Q9InBvc3QiICA+DQo8dGFibGUgd2lkdGg9IjEwMDAiIGJvcmRlcj0iMCIgYWxpZ249ImNlbnRlciIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIj4NCiAgPHRyPiANCiAgICA8dGQgd2lkdGg9IjIwOCIgYmFja2dyb3VuZD0iaW1hZ2VzL3pmZ2pqX2JnMS5qcGciIGFsaWduPSJjZW50ZXIiIHZhbGlnbj0idG9wIj4gICA8Y2VudGVyPjxpZnJhbWUgbmFtZT0iSTEiICBzcmM9InBlcnNvbi1sZWZ0bWVudS5odG1sIiBzY3JvbGxpbmc9Im5vIiBib3JkZXI9IjAiIA0KaGVpZ2h0PSI1ODAiIHdpZHRoPSIxOTAiIGZyYW1lYm9yZGVyPSIwIiBtYXJnaW53aWR0aD0iMCIgbWFyZ2luaGVpZ2h0PSIwIiB2YWxpZ249InRvcCIgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50Ij48L2lmcmFtZT48L2NlbnRlcj48L3RkPg0KDQogICAgPHRkIHdpZHRoPSI3OTIiIHZhbGlnbj0idG9wIiBiYWNrZ3JvdW5kPSJpbWFnZXMvcmlnaHQtYmcuanBnIj4gPHRhYmxlIHdpZHRoPSIxMDAlIiBoZWlnaHQ9IjI5IiBib3JkZXI9IjAiIGFsaWduPSJjZW50ZXIiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCI+DQogICAgICAgIDx0cj4gDQogICAgICAgICAgPHRkIHdpZHRoPSI5OSUiIGJhY2tncm91bmQ9ImltYWdlcy96Zmdqal8xLmpwZyI+PHRhYmxlIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiIGFsaWduPSJjZW50ZXIiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCI+DQogICAgICAgICAgICAgIDx0cj4gDQogICAgICAgICAgICAgICAgPHRkIHdpZHRoPSI1JSIgdmFsaWduPSJtaWRkbGUiPiA8ZGl2IGFsaWduPSJjZW50ZXIiPjxpbWcgc3JjPSJpbWFnZXMvZGFvaGFuZ2EuZ2lmIiB3aWR0aD0iMTYiIGhlaWdodD0iMTYiPjwvZGl2PjwvdGQ+DQogICAgICAgICAgICAgICAgPHRkIHdpZHRoPSI5NSUiPrWxx7DOu9bDo7rK19KzLS3Xobe/uau7/b3wuPbIy9XLu6ey6dGvtcfCvDwvdGQ+DQogICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICA8L3RhYmxlPjwvdGQ+DQogICAgICAgIDwvdHI+DQogICAgICA8L3RhYmxlPg0KICAgICANCiAgICAgIDx0YWJsZSB3aWR0aD0iNzc0IiBib3JkZXI9IjAiIGFsaWduPSJjZW50ZXIiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iNSI+DQogICAgICAgIDx0cj4NCiAgICAgICAgICA8dGQgaGVpZ2h0PSIyMjAiIGJhY2tncm91bmQ9ImltYWdlcy9wZXJzb25fYmcuanBnIj48dGFibGUgd2lkdGg9IjkwJSIgaGVpZ2h0PSIxOTYiIGJvcmRlcj0iMCIgYWxpZ249ImNlbnRlciI+DQogICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPSIzIiBjbGFzcz0iZm9udC1yZWQxNCIgPrj2yMu5q7v9vfDVy7untcfCvDwvdGQ+DQogICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgIDx0ZCB3aWR0aD0iMTAlIiBjbGFzcz0iZm9udDE0IiA+08O7p8P7PC90ZD4NCiAgICAgICAgICAgICAgPHRkIHdpZHRoPSIyOCUiPjxpbnB1dCAgbmFtZT0idXNlcm5hbWUiICB0eXBlPSJ0ZXh0IiBjbGFzcz0iaW5wdXRsb2dpbiIgPjwvdGQ+DQogICAgICAgICAgICAgIDx0ZCB3aWR0aD0iNjIlIiBjbGFzcz0iZ3JheSI+08O7p8P71rjE+tTa16Ky4cqx19TQ0Mno1sO1xDItMTLOu9OizsTX1sS4u/LK/dfWo6jH+LfWtPPQodC0o6mhozwvdGQ+DQogICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICA8dGQgY2xhc3M9ImZvbnQxNCIgPsPcJm5ic3A7Jm5ic3A7wus8L3RkPg0KICAgICAgICAgICAgICA8dGQ+PGlucHV0ICBuYW1lPSJwYXNzd29yZCIgdHlwZT0icGFzc3dvcmQiIGNsYXNzPSJpbnB1dGxvZ2luIiA+PC90ZD4NCiAgICAgICAgICAgICAgPHRkIGNsYXNzPSJncmF5Ij48YSBocmVmPSJNYWluU2VydmxldD9JRD0xNCIgdGFyZ2V0PSJfYmxhbmsiPtPDu6fD+8PcwuvIobvYx+u147v3oaM8L2E+PC90ZD4NCiAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgIDx0ZCBjbGFzcz0iZm9udDE0IiA+0enWpMLrPC90ZD4NCiAgICAgICAgICAgICAgPHRkPjxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iaW5wdXRsb2dpbjIiIG5hbWU9ImltYWdlY29kZSIgc2l6ZT0iNCIgbWF4bGVuZ3RoPSI0IiBvbktleVByZXNzPSJqYXZhc2NyaXB0OmNoZWNrTnVtYmVyKCk7Ij4NCiAgICAgICAgICAgICAgICA8Zm9udCBjb2xvcj0iIzk5MDAwMCI+PGltZyBzcmM9IlZlcmlmeUltYWdlU2VydmxldCIgd2lkdGg9IjQwIiBoZWlnaHQ9IjIwIiBhbGlnbj0ibWlkZGxlIj48L2ZvbnQ+PC90ZD4NCiAgICAgICAgICAgICAgPHRkIGNsYXNzPSJncmF5Ij7H68rkyOu62r/yxNq1xMr919ahozwvdGQ+DQogICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICA8dGQ+Jm5ic3A7PC90ZD4NCiAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImltYWdlIiBzcmM9ImltYWdlcy9sb2dpbl9idXkuZ2lmIiBuYW1lPSJTVUJNSVQiICBib3JkZXI9IjAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZvbnQtcmVkMTQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgCTxhIGhyZWY9Imh0dHA6Ly93d3cuc2hnamouY29tL2h0bWwvY2p3dC80MDIyMi5odG1sIiB0YXJnZXQ9Il9ibGFuayI+sum/tLCyyKvM4cq+PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgPHRkID4mbmJzcDs8L3RkPg0KICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICA8L3RhYmxlPjwvdGQ+DQogICAgICAgIDwvdHI+DQogICAgICA8L3RhYmxlPg0KICAJICA8YnI+DQogIAkgIA0KICAJICA8RElWIGlkPWJhbm5lcjMgY2xhc3M9YmFubmVyYWQgc3R5bGU9Im1hcmdpbi1sZWZ0OjE1cHg7ZGlzcGxheTppbmxpbmU7Ij4NCiA8T0w+DQogIDxMST48aW1nICBzcmM9ImltYWdlcy9oZHB3ZWl4aW4yMDE1eGMuZ2lmIj48L0xJPiANCiAgICA8IS0tTEk+PGEgaHJlZj0iaHR0cDovL3BlcnNvbi5zaGdqai5jb20vYmpjeC9TZWFyY2hBd2FyZCIgdGFyZ2V0PSJfYmxhbmsiPjxpbWcgIHNyYz0iaW1hZ2VzL3BlcnNvbi5naWYiPjwvYT48L0xJLS0+IA0KICAgICAgPExJPjxhIGhyZWY9Imh0dHA6Ly93d3cuc2hnamouY29tL3N0YXRpYy9tb2JpbGUvaW5kZXguaHRtIiB0YXJnZXQ9Il9ibGFuayI+PGltZyAgc3JjPSJpbWFnZXMvY2pfMjAxMzA0MTEuZ2lmIj48L2E+PC9MST4NCiAgICAgIA0KICA8L09MPg0KICAgIDxESVYgY2xhc3M9bW91c2VfZGlyZWN0aW9uID4NCiAgICAgICAgPERJViBjbGFzcz1tb3VzZV90b3A+PC9ESVY+DQogICAgICAgIDxESVYgY2xhc3M9bW91c2VfYm90dG9tPjwvRElWPg0KICAgIDwvRElWPg0KPC9ESVY+DQogIAkgIDxicj4NCiAgICAgIA0KICAgICAgPGJyPjxkaXYgc3R5bGU9ImNsZWFyOmJvdGg7Ij48L2Rpdj4NCiAgICAgIDxjZW50ZXI+DQogICAgICAgIDxpZnJhbWUgbmFtZT0iSXgiICAgc3JjPSJEZ2pqVmFsaWRhdGUuaHRtbCIgc2Nyb2xsaW5nPSJubyIgYm9yZGVyPSIwIg0KaGVpZ2h0PSIyODMiIHdpZHRoPSI5NSUiIGZyYW1lYm9yZGVyPSIwIiBtYXJnaW53aWR0aD0iMCIgbWFyZ2luaGVpZ2h0PSIwIiB2YWxpZ249InRvcCIgPjwvaWZyYW1lPjwvY2VudGVyPiA8L3RkPg0KICA8L3RyPg0KPC90YWJsZT4NCjxjZW50ZXI+PGlmcmFtZSBuYW1lPSJJMiIgIHNyYz0iZm9vdGVyMC5odG1sIiBzY3JvbGxpbmc9Im5vIiBib3JkZXI9IjAiIA0KaGVpZ2h0PSIxMTYiIHdpZHRoPSIxMDAwIiBmcmFtZWJvcmRlcj0iMCIgbWFyZ2lud2lkdGg9IjAiIG1hcmdpbmhlaWdodD0iMCIgdmFsaWduPSJ0b3AiIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCI+PC9pZnJhbWU+PC9jZW50ZXI+DQoNCiA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJwYXNzd29yZF9tZDUiPg0KIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IklEIiB2YWx1ZT0iMCI+DQo8L2Zvcm0+DQo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+DQp2YXIgZ2FKc0hvc3QgPSAoKCJodHRwczoiID09IGRvY3VtZW50LmxvY2F0aW9uLnByb3RvY29sKSA/ICJodHRwczovL3NzbC4iIDogImh0dHA6Ly93d3cuIik7DQpkb2N1bWVudC53cml0ZSh1bmVzY2FwZSgiJTNDc2NyaXB0IHNyYz0nIiArIGdhSnNIb3N0ICsgImdvb2dsZS1hbmFseXRpY3MuY29tL2dhLmpzJyB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnJTNFJTNDL3NjcmlwdCUzRSIpKTsNCjwvc2NyaXB0Pg0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPg0KdmFyIHBhZ2VUcmFja2VyID0gX2dhdC5fZ2V0VHJhY2tlcigiVUEtMTk1NTY1NC0zIik7DQpwYWdlVHJhY2tlci5faW5pdERhdGEoKTsNCnBhZ2VUcmFja2VyLl90cmFja1BhZ2V2aWV3KCk7DQo8L3NjcmlwdD4NCg0KPHNjcmlwdCB0eXBlPXRleHQvamF2YXNjcmlwdCBzcmM9ImpzL2Jhbm5lcjMxNS5qcyI+PC9zY3JpcHQ+DQoNCg0KDQo8L2JvZHk+DQo8L2h0bWw+";

        String html = new String(Base64.getDecoder().decode(base64Text), "GBK");
        System.out.println(html);
        Pattern pattern = Pattern.compile("[\\s]");
        System.out.println(pattern.toString());
        URL url = new URL("https://person.shgjj.com:8090");
        System.out.println(url.toString());
        assertTrue( true );

    }


    @Test
    public void regx() {
        String text = "/MainServlet?username=supermoonie&password=wangchao123&imagecode=4403&password_md5=E7000717CC04EC2AEE5F214F7A36AEE8&ID=0";
        System.out.println(text.matches("/MainServlet\\?username=\\S+&password=\\S+&imagecode=\\d+&password_md5=\\S+&ID=0"));
    }

}
